@model AllBookmarksViewModel
<script>
    function OnFirst() {
        document.getElementById('pages-input').value = 1;
        document.getElementById("pages-form").submit();
    }
    function OnPrevious() {
        document.getElementById('pages-input').value = @(Model.Pages.PageNumber - 1);
        document.getElementById("pages-form").submit();
    }
    function OnNext() {
        document.getElementById('pages-input').value = @(Model.Pages.PageNumber + 1);
        document.getElementById("pages-form").submit();
    }
    function OnLast() {
        document.getElementById('pages-input').value = @(Model.Pages.TotalPages);
        document.getElementById("pages-form").submit();
    }
</script>

<section class="box">
    <div class="container col-6-medium">
        <div class="row gtr-uniform aln-center">
            <div style="background-color: #ffffff; padding:1em;  width:1000px;">
                <form asp-action="Bookmarks" asp-controller="Profile">
                    <div class="row">
                        <div class="col-8">
                            <input name="search" placeholder="Введите имя закладки" class="align-center" style="width:100%; height:100%;" />
                        </div>
                        <div class="col-4">
                            <input type="submit" class="button small" value="Найти закладку" />
                        </div>
                    </div>
                </form>
                <div class="row">
                    <div class="col-12" style="text-align:center;">
                        <h1>Ваши закладки</h1>
                        @if (!(User.IsInRole("premium") || User.IsInRole("librarian") || User.IsInRole("admin")))
                        {
                            <h5 style="margin:0">Для того, чтобы иметь возможность добавлять неограниченное кол-во закладок для одной книги и давать закладками имена - приобретите Премиум!</h5>
                            <h4><a asp-controller="Account" asp-action="Premium">Перейти к покупке</a></h4>
                        }
                    </div>
                </div>
                @foreach ((string BookName, List<BookmarkViewModel> Bookmarks) corteage in Model.List)
                {
                    if (!(corteage.Bookmarks.Count == 0))
                    {
                        <div class="fa-border" style="margin: 0 0 1em 0; padding: 0.5em">
                            <table style="margin: 0">
                                <thead>
                                    <tr>
                                        <td colspan="4" align="center"><h3 style="margin:0">Книга: @corteage.BookName</h3></td>
                                    </tr>
                                    <tr>
                                        <td width="20%">
                                        </td>
                                        <td width="45%">
                                            Имя закладки
                                        </td>
                                        <td width="15%">
                                            Страница
                                        </td>
                                        <td width="20%">
                                        </td>
                                    </tr>
                                </thead>
                                @foreach (BookmarkViewModel bookmark in corteage.Bookmarks)
                                {
                                    @await Html.PartialAsync("~/Views/Shared/BookmarkPartial.cshtml", bookmark);
                                }
                            </table>
                        </div>
                    }
                }
                <form asp-controller="Profile" asp-action="Profile" asp-route-page="@Model.Pages.PageNumber" method="get" id="pages-form" style="margin:0">
                    <input type="hidden" asp-for="Pages.PageNumber" id="pages-input" />
                    <div class="row">
                        <div class="col-2">
                            @if (Model.Pages.HasPreviousPage)
                            {
                                <input type="button" class="small" value="На первую" onclick='OnFirst()' />
                            }
                        </div>
                        <div class="col-2">
                            @if (Model.Pages.HasPreviousPage)
                            {
                                <input type="button" class="small" value="Предыдущая" onclick='OnPrevious()' />
                            }
                        </div>
                        <div class="col-4">

                        </div>
                        <div class="col-2">
                            @if (Model.Pages.HasNextPage)
                            {
                                <input type="button" class="small" value="Следующая" onclick='OnNext()' />
                            }

                        </div>
                        <div class="col-2">
                            @if (Model.Pages.HasNextPage)
                            {
                                <input type="button" class="small" value="На последнюю" onclick='OnLast()' />
                            }
                        </div>
                    </div>
                </form>
            </div>
            </div>
        </div>
</section>